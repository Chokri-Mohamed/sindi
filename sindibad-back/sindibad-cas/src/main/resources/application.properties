#
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/sindibad
spring.datasource.username=postgres
spring.datasource.password=54783781
spring.sql.init.mode=always
#

server.error.whitelabel.enabled=false
spring.session.store-type=jdbc
spring.session.jdbc.cleanup-cron=0 0 * * * *
spring.session.jdbc.platform=postgresql
spring.session.jdbc.initialize-schema=always
spring.session.timeout=900s
spring.jpa.properties.hibernate.default_schema=sindibad_cas
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
server.port=9000
# ===============================
# Spring - JPA
# ===============================
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=update

logging.level.org.springframework.web.servlet: DEBUG

# ===============================
# Logging on local
# ===============================
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=false
#spring.jpa.properties.hibernate.format_sql=true


# ===============================
# Spring - Resource Server
# ===============================
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8000




#spring.security.oauth2.authorizationserver.client.client-1.registration.client-id=admin-client
#spring.security.oauth2.authorizationserver.client.client-1.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.client-1.registration.client-authentication-methods=client_secret_basic
#spring.security.oauth2.authorizationserver.client.client-1.registration.authorization-grant-types=authorization_code, refresh_token
#spring.security.oauth2.authorizationserver.client.client-1.registration.scopes=openid, profile
#spring.security.oauth2.authorizationserver.client.client-1.registration.redirect-uris=http://www.bing.com
#spring.security.oauth2.authorizationserver.client.client-1.registration.post-logout-redirect-uris=http://localhost:8080/oauth2/authorize?response_type=code&client_id=client&scope=openid&redirect_uri=https://google.com&code_challenge=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&code_challenge_method=S256
#spring.security.oauth2.authorizationserver.client.client-1.require-authorization-consent=false
#spring.security.oauth2.authorizationserver.client.client-1.token.access-token-time-to-live=30s
#logging.level.org.springframework.security=trace

